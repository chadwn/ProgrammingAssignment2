makeVector <- function(x = numeric()) {
m <- NULL
set <- function(y) {
x <<- y
m <<- NULL
}
get <- function() x
setmean <- function(mean) m <<- mean
getmean <- function() m
list(set = set, get = get,
setmean = setmean,
getmean = getmean)
}
v <- makeVector(1:5)
v$get()
v$setmean()
v$setmean
cachemean <- function(x, ...) {
m <- x$getmean()
if(!is.null(m)) {
message("getting cached data")
return(m)
}
data <- x$get()
m <- mean(data, ...)
x$setmean(m)
m
}
cachemean(1:5)
cachemean(1:5)
mean(1:5)
v$getmean()
cachemean(v)
cachemean(v)
source('~/Work/R programming/ProgrammingAssignment2/cachematrix.R')
mat <- matrix(1:9, nrow=3, ncol=3)
mat
mat2 <- makeCacheMatrix(mat)
mat2
cacheSolve(mat2)
mat2
mat2$get()
source('~/Work/R programming/ProgrammingAssignment2/cachematrix.R')
source('~/Work/R programming/ProgrammingAssignment2/cachematrix.R')
mat2 <- makeCacheMatrix(mat)
cacheSolve(mat2)
mat2$set()
source('~/Work/R programming/ProgrammingAssignment2/cachematrix.R')
mat2 <- makeCacheMatrix(mat)
mat2$getsolve()
cacheSolve(mat2)
solve(mat)
mat=rbind(c(1, -1/4), c(-1/4, 1))
mat
solve(c)
solve(mat)
mat2 <- makeCacheMatrix(mat)
cachSolve(mat2)
cacheSolve(mat2)
cacheSolve(mat2)
source('~/Work/R programming/ProgrammingAssignment2/cachematrix.R')
